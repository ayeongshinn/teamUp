<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.manage.mapper.FixturesMapper">
	
	<!-- 비품 목록 조회 -->
	<select id="list" resultType="fixturesVO" parameterType="hashMap">
		SELECT T.*
		    FROM (
		        SELECT ROW_NUMBER() OVER (ORDER BY F.FXTRS_NO ASC) AS rnum,
		               F.FXTRS_NO,
		               F.FXTRS_NM,
		               F.PRCHS_YMD,
		               F.FXTRS_QY,
		               F.RMRK_CN,
		               F.FXTRS_PSTN_CD,
		               F.FXTRS_STTUS_CD,
		               F.FXTRS_PHOTO,
		               F.FILE_GROUP_NO
        FROM FIXTURES F
        WHERE 1 = 1
        AND F.DEL_YN IS NULL
        
        <!-- 검색어 필터링 -->
        <if test="gubun == null or gubun == ''">
             AND F.FXTRS_NM LIKE '%' || #{keyword} || '%'
        </if>

        <!-- 위치 검색 조건 -->
        <if test="position != null and position != ''">
            AND F.FXTRS_PSTN_CD = #{position}
        </if>

        <!-- 상태 검색 조건 -->
        <if test="status != null and status != ''">
            AND F.FXTRS_STTUS_CD = #{status}
        </if>

        <!-- 구입일자 범위 검색 조건 -->
        <if test="startDate != null and startDate != ''">
            AND F.PRCHS_YMD &gt;= #{startDate} <!-- >= 연산 -->
        </if>
        <if test="endDate != null and endDate != ''">
            AND F.PRCHS_YMD &lt;= #{endDate} <!-- <= 연산 -->
        </if>
    
    ) T
    WHERE T.rnum BETWEEN (#{currentPage} * 10) - 9 AND (#{currentPage} * 10)
	</select>
	
	<!-- 비품 정보 수정 -->
	<update id="update" parameterType="fixturesVO">
		UPDATE FIXTURES
		SET FXTRS_NM = #{fxtrsNm}
		    , RMRK_CN = #{rmrkCn}
		    , FXTRS_PSTN_CD = #{fxtrsPstnCd}
		    , FXTRS_STTUS_CD = #{fxtrsSttusCd}
		    , FXTRS_PHOTO = null
		    <if test="fileGroupNo!=null and fileGroupNo!=''">
		    	, FILE_GROUP_NO = #{fileGroupNo}
		    </if>
		WHERE FXTRS_NO = #{fxtrsNo}
	</update>
	
	<!-- 비품 등록 -->
	<insert id="registPost" parameterType="fixturesVO">
		INSERT INTO FIXTURES (FXTRS_NO, FXTRS_NM, PRCHS_YMD, FXTRS_QY, RMRK_CN, FXTRS_PSTN_CD, FXTRS_STTUS_CD,FXTRS_PHOTO,FILE_GROUP_NO) 
		VALUES (
		    'B' || LPAD(TO_NUMBER(SUBSTR(COALESCE((SELECT MAX(FXTRS_NO) FROM FIXTURES), 'B0000'), 2)) + 1, 4, '0'),
		    #{fxtrsNm}, 
		    REPLACE(#{prchsYmd}, '-', ''),
		    #{fxtrsQy}, 
		    #{rmrkCn}, 
		    #{fxtrsPstnCd}, 
		    #{fxtrsSttusCd},
		    null,
		    #{fileGroupNo}
		)
	</insert>
	
	<!-- deleteAjax
	 {checkList=[B0002, B0005, B0006]}
	 -->
	 <!-- 비품 삭제 -->
	<update id="deleteAjax" parameterType="hashMap">
	<choose>
    	<when test="checkList.size != 0">
        	UPDATE FIXTURES
            SET    DEL_YN = 'Y'
            WHERE  FXTRS_NO IN
        			<foreach collection="checkList" item="item" 
                    			separator="," open="(" close=")">
                    	#{item}
                    </foreach>
	        </when>
	    </choose>
	</update>
	
	<!-- 전체 비품 개수 조회 -->
	<select id="getTotal" resultType="int" parameterType="hashMap">
	    SELECT COUNT(*) FROM FIXTURES
	    WHERE DEL_YN IS NULL
	
	    <!-- 검색어 필터링 -->
	    <if test="gubun == null or gubun == ''">
	        AND FXTRS_NM LIKE '%' || #{keyword} || '%'
	    </if>
	
	    <!-- 위치 검색 조건 -->
	    <if test="position != null and position != ''">
	        AND FXTRS_PSTN_CD = #{position}
	    </if>
	
	    <!-- 상태 검색 조건 -->
	    <if test="status != null and status != ''">
	        AND FXTRS_STTUS_CD = #{status}
	    </if>
	
	    <!-- 구입일자 범위 검색 조건 -->
	    <if test="startDate != null and startDate != ''">
	        AND PRCHS_YMD &gt;= #{startDate} <!-- >= 연산 -->
	    </if>
	    <if test="endDate != null and endDate != ''">
	        AND PRCHS_YMD &lt;= #{endDate} <!-- <= 연산 -->
	    </if>
	</select>
	
	<!-- <공통 코드> 비품 위치 코드 조회 -->
	<select id="getPositions" resultType="commonCodeVO">
		SELECT CLSF_CD, CLSF_NM, OUTPT_SN, GROUP_CD
		FROM   COMMON_CODE
		WHERE  GROUP_CD = 'A24'
	</select>
	
	<!-- <공통 코드> 비품 상태 코드 조회 -->
	<select id="getStatuses" resultType="commonCodeVO">
		SELECT CLSF_CD, CLSF_NM, OUTPT_SN, GROUP_CD
		FROM   COMMON_CODE
		WHERE  GROUP_CD = 'A11'
	</select>
 	
 	<!-- 파일 그룹 번호 조회 -->
	<select id="getFileGroupNo" resultType="int">
		SELECT NVL(MAX(FILE_GROUP_NO),0)+1 FROM FILE_DETAIL
	</select> 
	
	<!-- 파일 상세 정보 조회 -->
	<!-- {"fileGroupNo":fileGroupNo} -->
	<select id="getFileDetails" parameterType="int" resultType="fileDetailVO">
		SELECT FILE_SN, FILE_GROUP_NO, FILE_ORIGINAL_NM, FILE_SAVE_NM, FILE_SAVE_LOCATE
		     , FILE_SIZE, FILE_EXT, FILE_MIME, FILE_FANCYSIZE, FILE_SAVE_DATE, FILE_DOWNCOUNT
		FROM   FILE_DETAIL
		WHERE  FILE_GROUP_NO = #{fileGroupNo} 
	</select>
	
	
	
	<select id="fixturesLedgerList" resultType="fixturesUseLedgerVO" parameterType="hashMap">
			SELECT T.*
			FROM (
			    SELECT 
			        ROW_NUMBER() OVER (ORDER BY F.MNG_NO DESC) AS rnum,
			        F.MNG_NO,
			        F.USE_YMD,
			        F.RTN_YMD,
			        F.USE_PRPS,
			        F.RMRK_CN,
			        F.FXTRS_NO,
			        FX.FXTRS_NM,
			        F.EMP_NO,
			        E.EMP_NM,
			        CC.CLSF_NM AS DEPT_CD,
			        F.USE_ENV,
			        F.COST_INC,
			        F.COST_RSN
			    FROM 
			        FIXTURES_USE_LEDGER F
			    LEFT JOIN EMPLOYEE E ON F.EMP_NO = E.EMP_NO
			    LEFT JOIN COMMON_CODE CC ON E.DEPT_CD = CC.CLSF_CD
			    LEFT JOIN FIXTURES FX ON F.FXTRS_NO = FX.FXTRS_NO
			    WHERE 1 = 1   
			    
			    <choose>
			        <!-- 차량 번호 검색 -->
			        <when test="searchField == 'fixNm'">
			            AND FX.FXTRS_NM LIKE '%' || #{keyword} || '%'
			        </when>
			        
			        <!-- 사용 목적 검색 -->
			        <when test="searchField == 'purpose'">
			            AND F.USE_PRPS LIKE '%' || #{keyword} || '%'
			        </when>
			        
			        <!-- 사용자 이름 검색 -->
			        <when test="searchField == 'user'">
			            AND E.EMP_NM LIKE '%' || #{keyword} || '%'
			        </when>
			    </choose>
			    
			    <!-- 시작일 조건 -->
			    <if test="startDate != null and startDate != ''">
			        AND F.USE_YMD &gt;= #{startDate}
			    </if>
			    
			    <!-- 종료일 조건 -->
			    <if test="endDate != null and endDate != ''">
			        AND F.RTN_YMD &lt;= #{endDate}
			    </if>
			    
			    
			     
			) T
		    WHERE T.rnum BETWEEN (#{currentPage} * 10) - (10 - 1) AND (#{currentPage} * 10)
	</select>
	
	<select id="getLedgerTotal" resultType="int" parameterType="hashMap">
	    SELECT COUNT(*)
		FROM FIXTURES_USE_LEDGER F
		LEFT JOIN EMPLOYEE E ON F.EMP_NO = E.EMP_NO
		LEFT JOIN COMMON_CODE CC ON E.DEPT_CD = CC.CLSF_CD
		LEFT JOIN FIXTURES FX ON F.FXTRS_NO = FX.FXTRS_NO
		WHERE 1 = 1
		
		<choose>
	        <!-- 차량 번호 검색 -->
	        <when test="searchField == 'fixNm'">
	            AND FX.FXTRS_NM LIKE '%' || #{keyword} || '%'
	        </when>
	        
	        <!-- 사용 목적 검색 -->
	        <when test="searchField == 'purpose'">
	            AND F.USE_PRPS LIKE '%' || #{keyword} || '%'
	        </when>
	        
	        <!-- 사용자 이름 검색 -->
	        <when test="searchField == 'user'">
	            AND E.EMP_NM LIKE '%' || #{keyword} || '%'
	        </when>
	    </choose>
	    
	    <!-- 시작일 조건 -->
	    <if test="startDate != null and startDate != ''">
	        AND F.USE_YMD &gt;= #{startDate}
	    </if>
	    
	    <!-- 종료일 조건 -->
	    <if test="endDate != null and endDate != ''">
	        AND F.RTN_YMD &lt;= #{endDate}
	    </if>
	</select>
	
	<select id="empList" resultType="employeeVO">
		SELECT E.EMP_NO
		     , E.EMP_NM
		     , CC.CLSF_NM AS DEPT_CD
		FROM EMPLOYEE E
		JOIN COMMON_CODE CC ON E.DEPT_CD = CC.CLSF_CD
		WHERE CC.GROUP_CD = 'A17'
	</select>
	
		<!-- 자동완성 쿼리 -->
	<select id="autocomplete" parameterType="hashMap" resultType="hashMap">
    	SELECT F.FXTRS_NO, F.FXTRS_NM, F.PRCHS_YMD, F.FXTRS_QY, F.RMRK_CN
		     , F.FXTRS_PSTN_CD, F.FXTRS_STTUS_CD, F.FXTRS_PHOTO, F.DEL_YN, F.FILE_GROUP_NO
		     , P.CLSF_NM AS FXTRS_PSTN_NM, S.CLSF_NM AS FXTRS_STTUS_NM
		FROM FIXTURES F
		LEFT JOIN COMMON_CODE P ON F.FXTRS_PSTN_CD = P.CLSF_CD
		LEFT JOIN COMMON_CODE S ON F.FXTRS_STTUS_CD = S.CLSF_CD
		WHERE DEL_YN IS NULL
		AND FXTRS_NM LIKE #{fxtrsNm}
	</select>
	
	<insert id="registFxtLedger" parameterType="fixturesUseLedgerVO">
	 	INSERT INTO FIXTURES_USE_LEDGER (
		        MNG_NO
		      , USE_YMD
		      , USE_PRPS
		      , RMRK_CN
		      , FXTRS_NO
		      , EMP_NO
		      , RTN_YMD
		      , USE_ENV
		      , COST_INC
		      , COST_RSN
		)
		VALUES (
		    (SELECT CONCAT('FMN', LPAD(TO_NUMBER(COALESCE(SUBSTR(MAX(MNG_NO), 4), '0000')) + 1, 5, '0')) FROM FIXTURES_USE_LEDGER)
		    , #{useYmd}
		    , #{usePrps}
		    , #{rmrkCn}
		    , #{fxtrsNo}
		    , #{empNo}
		    , #{rtnYmd}
		    , #{useEnv}
		    , #{costInc}
		    , #{costRsn}
		
		)
	</insert>
	
	<update id="updateFxtLedger" parameterType="fixturesUseLedgerVO">
	 	UPDATE FIXTURES_USE_LEDGER
		SET USE_YMD = #{useYmd}
		  , USE_PRPS = #{usePrps}
		  , RMRK_CN = #{rmrkCn}
		  , FXTRS_NO = #{fxtrsNo}
		  , EMP_NO = #{empNo}
		  , RTN_YMD = #{rtnYmd}
		  , USE_ENV = #{useEnv}
		  , COST_INC = #{costInc}
		  , COST_RSN = #{costRsn}
		WHERE MNG_NO = #{mngNo}
	</update>
	
	<select id="getCount" resultType="int">
		SELECT COUNT(*)
		FROM FIXTURES
		WHERE DEL_YN IS NULL
	</select>
	
	<select id="dashYear" resultType="hashmap">
		WITH CurrentYear AS (
		    SELECT 
		        SUBSTR(PRCHS_YMD, 1, 4) AS Year,
		        COUNT(*) AS ItemCount
		    FROM 
		        FIXTURES
		    WHERE 
		        SUBSTR(PRCHS_YMD, 1, 4) = TO_CHAR(EXTRACT(YEAR FROM SYSDATE))
		    GROUP BY 
		        SUBSTR(PRCHS_YMD, 1, 4)
		),
		PreviousYear AS (
		    SELECT 
		        SUBSTR(PRCHS_YMD, 1, 4) AS Year,
		        COUNT(*) AS ItemCount
		    FROM 
		        FIXTURES
		    WHERE 
		        SUBSTR(PRCHS_YMD, 1, 4) = TO_CHAR(EXTRACT(YEAR FROM SYSDATE) - 1)
		    GROUP BY 
		        SUBSTR(PRCHS_YMD, 1, 4)
		)
		SELECT 
		    CurrentYear.Year AS CurrentYear,
		    CurrentYear.ItemCount AS CurrentYearCount,
		    PreviousYear.ItemCount AS LastYearCount,
		    ROUND(((CurrentYear.ItemCount - PreviousYear.ItemCount) / NULLIF(PreviousYear.ItemCount, 0)) * 100, 2) AS YearlyChangePercent
		FROM 
		    CurrentYear
		LEFT JOIN 
		    PreviousYear ON CurrentYear.Year = TO_CHAR(TO_NUMBER(PreviousYear.Year) + 1)
	</select>
	
	<select id="currentYearCount" resultType="hashMap">
		SELECT 
		    SUBSTR(PRCHS_YMD, 1, 4) AS Year,
		    COUNT(*) AS ItemCount
		FROM 
		    FIXTURES
		WHERE 
		    SUBSTR(PRCHS_YMD, 1, 4) = TO_CHAR(EXTRACT(YEAR FROM SYSDATE))
		GROUP BY 
		    SUBSTR(PRCHS_YMD, 1, 4)
	</select>
	
	<select id="currentDate" resultType="String">
		SELECT 
		    PRCHS_YMD 
		FROM 
		    (SELECT PRCHS_YMD FROM FIXTURES ORDER BY PRCHS_YMD DESC) 
		WHERE 
		    ROWNUM = 1
	</select>
	
	<select id="statusInA" resultType="int">
		SELECT COUNT(*)
		FROM FIXTURES
		WHERE FXTRS_STTUS_CD = 'A11-002'
		AND DEL_YN IS NULL
	</select>
	
	<select id="statusInU" resultType="int">
		SELECT COUNT(*)
		FROM FIXTURES
		WHERE FXTRS_STTUS_CD = 'A11-001'
		AND DEL_YN IS NULL
	</select>
	
	<select id="statusU" resultType="int">
		SELECT COUNT(*)
		FROM FIXTURES
		WHERE FXTRS_STTUS_CD = 'A11-003'
		AND DEL_YN IS NULL
	</select>
	
</mapper>




